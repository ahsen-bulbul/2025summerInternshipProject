Semantik Arama ve Diğer Arama Türleriyle Karşılaştırılması

1. Kelime Bazlı Arama (Lexical Search)

Verilen sorgudaki cümleler ile veri setinde bulunan kelimeler arasındaki kelime benzerliğine göre cevap verir. En yüksek benzerlik oranını alan veri çekilir. 

2. ASCII  Tabanlı Arama
Karakter odaklı

3. Vektör Temsili Tabanlı Arama
-semantic search/neural search/similarity search

Semantik arama kelime bazlı aramada olduğu gibi sadece ortak kelimelere odaklanmaz. Kullanıcının yaptığı aramanın anlamını bulmaya, kullanıcının niyetini çözmeye yöneliktir. Bu anlayış büyük ölçüde, kelimeleri ve ifadeleri çok boyutlu bir alana yerleştiren vektör yerleştirmelerine dayanır . Benzer anlamlara sahip kelimeler bir araya gelerek, arama motorunun gerçek anahtar kelime eşleşmelerinin ötesine geçen ilişkileri tespit etmesini sağlar.


Simetrik semantik arama: sorgu ve derlemedeki girişler yaklaşık olarak aynı uzunlukta ve aynı mşktarda içriğe sahiptir. 
İki metin de aynı kodlamaya sahiptir/ aynı embedding tipi (film/müzik aramaları gibi) -> Cosine Similarity (kosinüs gibi düşün yalnızca açı farkı önemli)

Asimetrik semantik arama: kısa sorgu, uzun bir cevap, benzerlikten ziyade bir cevap/açıklama vardır.
Query ve document farklı embedding tiplerine sahiptir
Bir problemi çözmeden önce bu kavramlara göre o problemi tanımlayabilmek önemlidir ve buna göre embedding model seçimi yapılır. -> Dotproduct (açı ve büyüklüğü önemser)


Simetrik semantik arama için uygun modeller
paraphrase-distilroberta-base-v1 / paraphrase-xlm-r-multilingual-v1
quora-distilbert-base / quora-distilbert-multilingual
distiluse-base-multilingual-cased-v2

Asimetrik semantik arama için uygun modeller
msmarco-distilbert-base-v2
msmarco-bert-base-v3


Semantik Arama 
nearest neighbour
mesafelerden kastımız gerçekte benzerlik kavramı, aratılan sorgu veri setinde verilerden hangisine daha yakınsa onunla daha yüksek benzerliğe sahiptir

nearest neighbour’da problem en yakın mesafeyi bulmak için tüm mesafelerin hesaplanması gerektiğidir. Bunu hızlandırmak için bazı teknikler kullanılabilir. 
-inverted file index (ivd): cluster, then search
-hierarchical navigable small worlds (hnsw): az point’le başlar o çevreyi arar sonrasında daha fazla point ekler

olası başka bir problem ise birbirine yakın birden fazla verinin olmasıdır. Bi verinin sorguya yakın olması onun kesinlikle doğru cevap olduğu anlamına gelmez. Bu verilerden doğru olanı seçebilmek için şunlar yapılabilir:
-reranking: bir modele yakın verilerden oluşturulmuş küme gönderilir ve aralarında bunlar good/bad answer seviyesine göre bir derecelendirme yapar ve en yüksek dereceli veri doğru cevap seçilir. Örneğin Gökyüzü hangi renktir? Sorusuna veri setinde gökyüzü mavi renktir ve gökyüzü kırmızı renktir şeklinde iki cevap olsun modele bu veriler gönderilir ve model kötü cevaba düşük rank verir.
-positive and negative pairs
burada yine good/bad answer ayrımı yapılır bad answer’lar embedding’te sorgudan uzaklaştırılırken(negative pair) good answer’lar sorguya yaklaştırılır(positive pair).